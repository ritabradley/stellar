{"version":3,"sources":["components/Logo/star.svg","components/Nav/Nav.js","components/Logo/Logo.js","components/ImageForm/ImageForm.js","components/Rank/Rank.js","components/FaceRecoginzer/FaceRecognizer.js","components/Signin/Signin.js","components/Register/Register.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Nav","_ref","onRouteChange","isSignedIn","react_default","a","createElement","className","onClick","Logo","tilt_default","options","max","style","height","width","alt","src","star","ImageForm","onInputChange","onDetectButtonSubmit","type","onChange","Rank","name","entries","concat","FaceRecognizer","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","loadUser","_useState","useState","_useState2","Object","slicedToArray","signInEmail","setEmail","_useState3","_useState4","signInPassword","setPassword","htmlFor","e","target","value","aria-describedby","placeholder","required","fetch","method","headers","Content-Type","body","JSON","stringify","email","password","then","response","json","user","Register","setName","_useState5","_useState6","initialState","input","route","joined","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","displayFaceDetectionBox","calcFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","state","count","assign","catch","err","console","log","_this$state","_this$state$user","particles_default","params","particles","number","density","enable","value_area","line_linked","opacity","move","direction","speed","shape","size","anim","opacity_min","interactivity","events","onclick","mode","modes","push","particles_nb","retina_detect","components_Nav_Nav","components_Logo_Logo","components_Rank_Rank","components_ImageForm_ImageForm","components_FaceRecoginzer_FaceRecognizer","components_Signin_Signin","components_Register_Register","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.539aa860.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star.98d7b8e3.svg\";","import React from 'react';\n\nconst Nav = ({ onRouteChange, isSignedIn }) => {\n  if (isSignedIn) {\n    return (\n      <nav className='d-flex justify-content-end nav'>\n        <p\n          onClick={() => onRouteChange('signout')}\n          className='nav-item p-3 text-light'>\n          Sign Out\n        </p>\n      </nav>\n    );\n  } else {\n    return (\n      <nav className='d-flex justify-content-end nav'>\n        <p\n          onClick={() => onRouteChange('signin')}\n          className='nav-item p-3 text-light'>\n          Sign In\n        </p>\n        <p\n          onClick={() => onRouteChange('register')}\n          className='nav-item p-3 orange'>\n          Register\n        </p>\n      </nav>\n    );\n  }\n};\n\nexport default Nav;\n","import React from 'react';\nimport Tilt from 'react-tilt';\nimport star from './star.svg';\nimport './Logo.css';\n\nconst Logo = () => {\n  return (\n    <div className='m-4 mt-0'>\n      <Tilt\n        className='Tilt rounded shadow'\n        options={{ max: 75 }}\n        style={{ height: 150, width: 150 }}>\n        <div className='Tilt-inner p-3'>\n          <img className='logo pt-3' alt='shooting star logo' src={star} />\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\nimport 'hover.css';\nimport './ImageForm.css';\n\nconst ImageForm = ({ onInputChange, onDetectButtonSubmit }) => {\n  return (\n    <div>\n      <p className='lead text-light'>\n        {`Stellar's facial recognition system will detect faces in your photos. Try it out:`}\n      </p>\n      <div className='d-flex justify-content-center'>\n        <div className='form d-flex justify-content-center w-50 p-4 rounded shadow-lg'>\n          <input\n            className='image-input border border-light rounded w-50 mr-3'\n            type='text'\n            onChange={onInputChange}\n          />\n          <button\n            className='btn custom-button detect-button hvr-grow'\n            onClick={onDetectButtonSubmit}>\n            Detect\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageForm;\n","import React from 'react';\n\nconst Rank = ({ name, entries }) => {\n  return (\n    <div>\n      <div className='text-light'>\n        <h4>{`${name}, your current entry count is...`}</h4>\n      </div>\n      <div className='text-light'>\n        <h2>{entries}</h2>\n      </div>\n    </div>\n  );\n};\n\nexport default Rank;\n","import React from 'react';\nimport './FaceRecognizer.css';\nconst FaceRecognizer = ({ imageUrl, box }) => {\n  return (\n    <div className='d-flex justify-content-center m-1'>\n      <div className='position-absolute mt-2'>\n        <img\n          id='inputimage'\n          width='500px'\n          height='auto'\n          alt=''\n          src={imageUrl}\n        />\n        <div\n          className='bounding-box'\n          style={{\n            top: box.topRow,\n            right: box.rightCol,\n            bottom: box.bottomRow,\n            left: box.leftCol,\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognizer;\n","import React, { useState } from 'react';\nimport './Signin.css';\n\nconst Signin = ({ onRouteChange, loadUser }) => {\n  let [signInEmail, setEmail] = useState('');\n  let [signInPassword, setPassword] = useState('');\n\n  const onEmailChange = e => {\n    setEmail((signInEmail = e.target.value));\n  };\n  const onPasswordChange = e => {\n    setPassword((signInPassword = e.target.value));\n  };\n\n  const onSubmitSignIn = () => {\n    fetch('https://sleepy-crag-47754.herokuapp.com/signin', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        email: signInEmail,\n        password: signInPassword,\n      }),\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          loadUser(user);\n          onRouteChange('home');\n        }\n      });\n  };\n\n  return (\n    <div className='d-flex justify-content-center align-items-center'>\n      <div\n        className='py-4 text-center card bg-transparent shadow text-light'\n        style={{ width: '18rem' }}>\n        <div>\n          <legend className='display-4 mb-4'>Sign In</legend>\n          <div className='form-group mx-4'>\n            <label htmlFor='userEmail'>Email address</label>\n            <input\n              onChange={onEmailChange}\n              type='email'\n              className='form-control'\n              id='userEmail'\n              aria-describedby='emailHelp'\n              placeholder='Enter email'\n              required\n            />\n          </div>\n          <div className='form-group mx-4'>\n            <label htmlFor='userPassword'>Password</label>\n            <input\n              onChange={onPasswordChange}\n              type='password'\n              className='form-control'\n              id='userPassword'\n              placeholder='Password'\n              required\n            />\n          </div>\n          <div>\n            <button\n              onClick={onSubmitSignIn}\n              type='submit'\n              className='btn custom-button'>\n              Sign in\n            </button>\n          </div>\n          <div>\n            <button\n              onClick={() => onRouteChange('register')}\n              type='button'\n              className='btn btn-link orange'>\n              register\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Signin;\n","import React, { useState } from 'react';\nimport './Register.css';\n\nconst Register = ({ onRouteChange, loadUser }) => {\n  let [name, setName] = useState('');\n  let [email, setEmail] = useState('');\n  let [password, setPassword] = useState('');\n\n  const onNameChange = e => {\n    setName((name = e.target.value));\n  };\n  const onEmailChange = e => {\n    setEmail((email = e.target.value));\n  };\n  const onPasswordChange = e => {\n    setPassword((password = e.target.value));\n  };\n\n  const onRegisterSubmit = () => {\n    fetch('https://sleepy-crag-47754.herokuapp.com/register', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n      }),\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user.id) {\n          loadUser(user);\n          onRouteChange('home');\n        }\n      });\n  };\n\n  return (\n    <div className='d-flex justify-content-center align-items-center'>\n      <div\n        className='py-4 text-center card bg-transparent shadow text-light'\n        style={{ width: '18rem' }}>\n        <div>\n          <legend className='display-4 mb-4'>Register</legend>\n          <div className='form-group mx-4'>\n            <label htmlFor='name'>Name</label>\n            <input\n              onChange={onNameChange}\n              type='text'\n              className='form-control'\n              id='name'\n              placeholder='Enter name'\n              required\n            />\n          </div>\n          <div className='form-group mx-4'>\n            <label htmlFor='email'>Email address</label>\n            <input\n              onChange={onEmailChange}\n              type='email'\n              className='form-control'\n              id='email'\n              placeholder='Enter email'\n              required\n            />\n          </div>\n          <div className='form-group mx-4'>\n            <label htmlFor='password'>Password</label>\n            <input\n              onChange={onPasswordChange}\n              type='password'\n              className='form-control'\n              id='password'\n              placeholder='Password'\n              required\n            />\n          </div>\n          <div>\n            <button\n              onClick={onRegisterSubmit}\n              type='submit'\n              className='btn custom-button'>\n              Register\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Nav from '../components/Nav/Nav';\nimport Logo from '../components/Logo/Logo';\nimport ImageForm from '../components/ImageForm/ImageForm';\nimport Rank from '../components/Rank/Rank';\nimport FaceRecognizer from '../components/FaceRecoginzer/FaceRecognizer';\nimport Signin from '../components/Signin/Signin';\nimport Register from '../components/Register/Register';\nimport './App.css';\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: '',\n  },\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = initialState;\n  }\n\n  onInputChange = e => {\n    this.setState({ input: e.target.value });\n  };\n\n  displayFaceDetectionBox = box => {\n    this.setState({ box });\n  };\n\n  calcFaceLocation = data => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  onDetectButtonSubmit = () => {\n    const { input } = this.state;\n    const { id } = this.state.user;\n    this.setState({ imageUrl: input });\n    fetch('https://sleepy-crag-47754.herokuapp.com/imageurl', {\n      method: 'post',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        input,\n      }),\n    })\n      .then(response => response.json())\n      .then(response => {\n        if (response) {\n          fetch('https://sleepy-crag-47754.herokuapp.com/image', {\n            method: 'put',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n              id,\n            }),\n          })\n            .then(response => response.json())\n            .then(count => {\n              this.setState(\n                Object.assign(this.state.user, {\n                  entries: count,\n                }),\n              );\n            });\n        }\n        this.displayFaceDetectionBox(this.calcFaceLocation(response));\n      })\n      .catch(err => console.log(err));\n  };\n\n  loadUser = data => {\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined,\n      },\n    });\n  };\n\n  onRouteChange = route => {\n    if (route === 'signout') {\n      this.setState(initialState);\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  };\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    const { name, entries } = this.state.user;\n    return (\n      <div className='App'>\n        <Particles\n          className='particles'\n          params={{\n            particles: {\n              number: {\n                value: 100,\n                density: {\n                  enable: true,\n                  value_area: 1000,\n                },\n              },\n              line_linked: {\n                enable: true,\n                opacity: 0.07,\n              },\n              move: {\n                direction: 'none',\n                speed: 0.8,\n              },\n              shape: {\n                type: 'star',\n              },\n              size: {\n                value: 2,\n              },\n              opacity: {\n                anim: {\n                  enable: true,\n                  speed: 1,\n                  opacity_min: 0.05,\n                },\n              },\n            },\n            interactivity: {\n              events: {\n                onclick: {\n                  enable: true,\n                  mode: 'push',\n                },\n              },\n              modes: {\n                push: {\n                  particles_nb: 1,\n                },\n              },\n            },\n            retina_detect: true,\n          }}\n        />\n        <Nav isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        {route === 'home' ? (\n          <div>\n            <Logo />\n            <h1 className='title'>Stellar</h1>\n            <Rank name={name} entries={entries} />\n            <ImageForm\n              onInputChange={this.onInputChange}\n              onDetectButtonSubmit={this.onDetectButtonSubmit}\n            />\n            <FaceRecognizer box={box} imageUrl={imageUrl} />\n          </div>\n        ) : route === 'signin' || route === 'signout' ? (\n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register\n            loadUser={this.loadUser}\n            onRouteChange={this.onRouteChange}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}